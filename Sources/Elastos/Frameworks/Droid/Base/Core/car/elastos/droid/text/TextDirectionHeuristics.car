//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Text.ITextDirectionHeuristic;
    using interface Elastos.Core.ICharSequence;

    namespace Elastos {
    namespace Droid {
    namespace Text {

    /**
     * Some objects that implement {@link TextDirectionHeuristic}. Use these with
     * the {@link BidiFormatter#unicodeWrap unicodeWrap()} methods in {@link BidiFormatter}.
     * Also notice that these direction heuristics correspond to the same types of constants
     * provided in the {@link android.view.View} class for {@link android.view.View#setTextDirection
     * setTextDirection()}, such as {@link android.view.View#TEXT_DIRECTION_RTL}.
     * <p>To support versions lower than {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2},
     * you can use the support library's {@link android.support.v4.text.TextDirectionHeuristicsCompat}
     * class.
     *
     */
    interface ITextDirectionHeuristics {
        GetLTR(
            [out] ITextDirectionHeuristic** tdh);

        GetRTL(
            [out] ITextDirectionHeuristic** tdh);

        GetFIRSTSTRONG_LTR(
            [out] ITextDirectionHeuristic** tdh);

        GetFIRSTSTRONG_RTL(
            [out] ITextDirectionHeuristic** tdh);

        GetANYRTL_LTR(
            [out] ITextDirectionHeuristic** tdh);

        GetLOCALE(
            [out] ITextDirectionHeuristic** tdh);
    }

    /**
     * Interface for an algorithm to guess the direction of a paragraph of text.
     *
     */
    [deprecated]
    interface ITextDirectionAlgorithm {
        /**
         * Returns whether the range of text is RTL according to the algorithm.
         *
         */
        CheckRtl(
            [in] ArrayOf<Char32>* chars,
            [in] Int32 start,
            [in] Int32 count,
            [out] Int32* result);
    }

    } // namespace Text
    } // namepsace Droid
    } // namespace Elastos
}
